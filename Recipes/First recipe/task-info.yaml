type: edu
files:
- name: src/recipes/RecipesApplication.java
  visible: true
  text: |
    package recipes;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class RecipesApplication {
        public static void main(String[] args) {
            SpringApplication.run(RecipesApplication.class, args);
        }
    }
  learner_created: false
- name: resources/application.properties
  visible: true
  text: |-
    server.port=8881
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: build.gradle
  visible: true
  text: |
    plugins {
        id 'java'
        id 'org.springframework.boot' version '2.3.1.RELEASE'
        id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    }

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    sourceSets.main.resources.srcDirs = ["resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
  learner_created: false
- name: test/RecipesApplicationTest.java
  visible: false
  text: |
    import com.google.gson.Gson;
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;
    import org.hyperskill.hstest.testcase.CheckResult;

    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;
    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    import recipes.RecipesApplication;

    import java.util.Map;

    import static org.hyperskill.hstest.testcase.CheckResult.correct;


    public class RecipesApplicationTest extends SpringTest {

        public RecipesApplicationTest() {
            super(RecipesApplication.class);
        }

        final Map.Entry<String, String> name = Map.entry("name", "Fresh Mint Tea /Test");
        final Map.Entry<String, String> description = Map.entry("description", "Light, aromatic and refreshing beverage, ... /Test");
        final Map.Entry<String, String> ingredients = Map.entry("ingredients", "boiled water, honey, fresh mint leaves /Test");
        final Map.Entry<String, String> directions = Map.entry("directions", "1) Boil water. 2) Pour boiling hot water into a mug. " +
            "3) Add fresh mint leaves. 4) Mix and let the mint leaves seep for 3-5 minutes. 5) Add honey and mix again. /Test");

        final String JSON_TEST_RECIPE = new Gson().toJson(
            Map.ofEntries(name, description, ingredients, directions)
        );

        final String API_RECIPE = "/api/recipe";


        static void throwIfIncorrectStatusCode(HttpResponse response, int status) {
            if (response.getStatusCode() != status) {
                throw new WrongAnswer(response.getRequest().getMethod() +
                    " " + response.getRequest().getLocalUri() +
                    " should respond with status code " + status +
                    ", responded: " + response.getStatusCode() + "\n\n" +
                    "Response body:\n" + response.getContent());
            }
        }


        @DynamicTest
        DynamicTesting[] dt = new DynamicTesting[]{
            this::testPostRecipe,
            this::testGetRecipe
        };

        CheckResult testPostRecipe() {
            HttpResponse response = post(API_RECIPE, JSON_TEST_RECIPE).send();

            throwIfIncorrectStatusCode(response, 200);

            return correct();
        }

        CheckResult testGetRecipe() {
            HttpResponse response = get(API_RECIPE).send();

            throwIfIncorrectStatusCode(response, 200);

            expect(response.getContent()).asJson().check(
                isObject()
                    .value(name.getKey(), isString(name.getValue()))
                    .value(description.getKey(), isString(description.getValue()))
                    .value(ingredients.getKey(), isString(ingredients.getValue()))
                    .value(directions.getKey(), isString(directions.getValue())));

            return correct();
        }
    }
  learner_created: false
- name: src/recipes/Recipe.java
  visible: true
  learner_created: true
- name: src/recipes/RecipeController.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/180/stages/917/implement#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #2

    GET /api/recipe should respond with status code 200, responded: 500

    Response body:
    {&quot;timestamp&quot;:&quot;2021-08-14T05:24:45.612+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;&quot;,&quot;path&quot;:&quot;/api/recipe&quot;}

    Please find below the output of your program during this failed test.

    ---

    .   ____          _            __ _ _
     /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \
    ( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \
     \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
      &#39;  |____| .__|_| |_|_| |_\__, | / / / /
     =========|_|==============|___/=/_/_/_/
     :: Spring Boot ::        (v2.3.1.RELEASE)

    2021-08-13 22:24:43.197  INFO 3232 --- [    Test worker] recipes.RecipesApplication               : Starting RecipesApplication on DESKTOP-6TGII4C with PID 3232 (started by KARL in C:\Users\KARL\Dev\jba-hyperskill\java-developer\recipes-db\Recipes\task)
    2021-08-13 22:24:43.197  INFO 3232 --- [    Test worker] recipes.RecipesApplication               : No active profile set, falling back to default profiles: default
    2021-08-13 22:24:44.450  INFO 3232 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8881 (http)
    2021-08-13 22:24:44.466  INFO 3232 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
    2021-08-13 22:24:44.466  INFO 3232 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
    2021-08-13 22:24:44.560  INFO 3232 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
    2021-08-13 22:24:44.560  INFO 3232 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1316 ms
    2021-08-13 22:24:44.811  INFO 3232 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService &#39;applicationTaskExecutor&#39;
    2021-08-13 22:24:45.062  INFO 3232 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;
    2021-08-13 22:24:45.109  INFO 3232 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8881 (http) with context path &#39;&#39;
    2021-08-13 22:24:45.109  INFO 3232 --- [    Test worker] recipes.RecipesApplication               : Started RecipesApplication in 2.301 seconds (JVM running for 3.256)
    2021-08-13 22:24:45.470  INFO 3232 --- [nio-8881-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
    2021-08-13 22:24:45.470  INFO 3232 --- [nio-8881-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#39;dispatcherServlet&#39;
    2021-08-13 22:24:45.470  INFO 3232 --- [nio-8881-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
    2021-08-13 22:24:45.596  WARN 3232 --- [nio-8881-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: No converter found for return value of type: class recipes.Recipe]
  time: Sat, 14 Aug 2021 05:24:46 UTC
record: -1
